#include "Data.h"
#include <iostream>
using namespace std;

template <typename T>
Stack<T>::Stack(int size) {
    n = size;
    a = new T[n];
    top = -1;
}

template <typename T>
Stack<T>::~Stack() {
    delete[] a;
}

template <typename T>
void Stack<T>::push(T element) {
    if (top == n - 1) {
        cout << "Stack is full\n";
    } else {
        ++top;
        a[top] = element;
    }
}

template <typename T>
bool Stack<T>::pop(T &element) {
    if (top == -1) {
        cout << "The stack is empty\n";
        return false;
    } else {
        element = a[top];
        --top;
        return true;
    }
}

template <typename T>
void Stack<T>::display() {
    if (top == -1) {
        cout << "The stack is empty\n";
    } else {
        cout << "Stack elements: ";
        for (int i = 0; i <= top; i++) {
            cout << a[i] << " ";
        }
        cout << endl;
    }
}

template <typename T>
void Stack<T>::operations() {
    int ch;
    while (true) {
        cout << "\nStack Operations Menu\n1- Push an element\n2- Pop\n3- Display the elements\n4- Exit\nSelect an operation: ";
        cin >> ch;
        switch (ch) {
            case 1: {
                T element;
                cout << "Enter the element to push: ";
                cin >> element;
                push(element);
                break;
            }
            case 2: {
                T element;
                if (pop(element)) {
                    cout << "Popped element: " << element << endl;
                }
                break;
            }
            case 3: {
                display();
                break;
            }
            case 4: {
                exit(0);
            }
            default: {
                cout << "Invalid choice.\n";
            }
        }
    }
}

// Explicit template instantiation
template class Stack<int>;
